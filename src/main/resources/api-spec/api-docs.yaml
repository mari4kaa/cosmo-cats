openapi: 3.0.1
info:
  title: Cosmo Cats Marketplace
  description: This is a simple API for Cosmo Cats Marketplace
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.1"
servers:
- url: http://localhost:8080
  description: test server
paths:
  /api/v1/products/{id}:
    get:
      tags:
      - product-controller
      operationId: getProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
    put:
      tags:
      - product-controller
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /api/v1/orders/{orderId}:
    get:
      tags:
      - order-controller
      operationId: getOrderById
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDto"
    put:
      tags:
      - order-controller
      operationId: updateOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDto"
    delete:
      tags:
      - order-controller
      operationId: deleteOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /api/v1/categories/{categoryId}:
    put:
      tags:
      - category-controller
      operationId: updateCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDto"
    delete:
      tags:
      - category-controller
      operationId: deleteCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /api/v1/products:
    get:
      tags:
      - product-controller
      operationId: getAllProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductDto"
    post:
      tags:
      - product-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDto"
  /api/v1/orders:
    get:
      tags:
      - order-controller
      operationId: getAllOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderDto"
    post:
      tags:
      - order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDto"
  /api/v1/categories:
    get:
      tags:
      - category-controller
      operationId: getAllCategories
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryDto"
    post:
      tags:
      - category-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDto"
  /api/v1/orders/most-frequent-order-entries:
    get:
      tags:
      - order-controller
      operationId: getMostFrequentProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductReport"
  /api/v1/orders/by-card/{bankCardId}:
    get:
      tags:
      - order-controller
      operationId: getAllOrdersByBankCardId
      parameters:
      - name: bankCardId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderDto"
  /api/v1/cosmo-cats:
    get:
      tags:
      - cosmo-cat-controller
      operationId: getCosmoCats
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CatInfoDto"
  /api/v1/categories/{id}:
    get:
      tags:
      - category-controller
      operationId: getCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDto"
components:
  schemas:
    ProductDto:
      required:
      - categoryId
      - name
      - origin
      type: object
      properties:
        id:
          type: string
          format: uuid
        categoryId:
          type: string
          format: uuid
        name:
          maxLength: 100
          minLength: 2
          type: string
        description:
          maxLength: 500
          minLength: 0
          type: string
        origin:
          maxLength: 50
          minLength: 2
          type: string
        price:
          type: number
          format: float
    OrderDto:
      required:
      - bankCardId
      - entryDtos
      type: object
      properties:
        id:
          type: string
          format: uuid
        bankCardId:
          type: string
        entryDtos:
          type: array
          items:
            $ref: "#/components/schemas/OrderEntryDto"
        price:
          type: number
          format: float
    OrderEntryDto:
      required:
      - productId
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          maximum: 100
          type: integer
          format: int32
    CategoryDto:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 50
          minLength: 2
          type: string
    ProductReport:
      type: object
      properties:
        totalQuantity:
          type: integer
          format: int64
        productName:
          type: string
    CatInfoDto:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 50
          minLength: 2
          type: string
